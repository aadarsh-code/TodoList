{"version":3,"sources":["components/Todoui.js","App.js","index.js"],"names":["Todoui","useState","input","setinput","localStorage","getItem","JSON","parse","list","setList","useEffect","setItem","stringify","handleSubmit","e","key","target","textContent","className","type","value","required","id","placeholder","onChange","onKeyDown","name","onClick","map","itemval","ind","console","log","updatelist","filter","items","index","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMA4EeA,EA/DA,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBATbG,aAAaC,QAAQ,SAEvBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAKT,mBAAOG,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRN,aAAaO,QAAQ,QAASL,KAAKM,UAAUJ,MAC5C,CAACA,IAEJ,IAAMK,EAAe,SAACC,GACfZ,IACgB,UAAVY,EAAEC,KAA4C,QAAzBD,EAAEE,OAAOC,cACvCR,EAAQ,GAAD,mBAAKD,GAAL,CAAWN,KAElBC,EAAS,OAWb,OACE,qBAAKe,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,oDACA,uBACEC,KAAK,OACLC,MAAOlB,EACPmB,UAAQ,EACRC,GAAG,OACHC,YAAY,qBACZC,SAAU,SAACV,GACTX,EAASW,EAAEE,OAAOI,QAEpBK,UAAWZ,IAGb,wBAAQK,UAAU,MAAMQ,KAAK,MAAMC,QAASd,EAA5C,iBAGCL,EAAKoB,KAAI,SAACC,EAASC,GAClB,OACE,sBAAKZ,UAAU,WAAf,UACGW,EACD,cAAC,IAAD,CACEX,UAAU,QACVS,QAAS,YAlCN,SAACL,GAClBS,QAAQC,IAAI,UACZ,IAAMC,EAAazB,EAAK0B,QAAO,SAACC,EAAOC,GACrC,OAAOA,IAAUd,KAEnBb,EAAQwB,GA8BQI,CAAWP,oBCrDhBQ,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea3b7de2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\nimport { HiX } from \"react-icons/hi\";\r\n\r\n//get localstroage data\r\nconst getData = () => {\r\n  let item = localStorage.getItem(\"lists\");\r\n  if (item) {\r\n    return JSON.parse(localStorage.getItem(\"lists\"));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nconst Todoui = () => {\r\n  const [input, setinput] = useState(\"\");\r\n  const [list, setList] = useState(getData());\r\n  //set data into localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lists\", JSON.stringify(list));\r\n  }, [list]);\r\n\r\n  const handleSubmit = (e) => {\r\n    if (!input) {\r\n    } else if (e.key === \"Enter\" || e.target.textContent === \"Add\") {\r\n      setList([...list, input]);\r\n\r\n      setinput(\"\");\r\n    }\r\n  };\r\n  const deleteItem = (id) => {\r\n    console.log(\"delete\");\r\n    const updatelist = list.filter((items, index) => {\r\n      return index !== id;\r\n    });\r\n    setList(updatelist);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"box\">\r\n        <div className=\"box-data\">\r\n          <h1>Add Tod0s here....</h1>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"write something...\"\r\n            onChange={(e) => {\r\n              setinput(e.target.value);\r\n            }}\r\n            onKeyDown={handleSubmit}\r\n          />\r\n\r\n          <button className=\"btn\" name=\"btn\" onClick={handleSubmit}>\r\n            Add\r\n          </button>\r\n          {list.map((itemval, ind) => {\r\n            return (\r\n              <div className=\"todo-div\">\r\n                {itemval}\r\n                <HiX\r\n                  className=\"icons\"\r\n                  onClick={() => {\r\n                    deleteItem(ind);\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todoui;\r\n","import React from \"react\";\nimport Todoui from \"./components/Todoui\";\n\nconst App = () => {\n  return (\n    <div>\n      <Todoui />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}